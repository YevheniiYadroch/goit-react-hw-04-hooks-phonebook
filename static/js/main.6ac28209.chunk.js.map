{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListElement.jsx","components/ContactList/ContactList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ContactForm","onChange","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","className","onReset","onSubmit","htmlFor","type","id","pattern","title","required","Filter","ContactListElement","props","ContactList","contacts","filter","onDelete","list","item","toLowerCase","includes","map","onClick","App","setContacts","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","preventDefault","form","target","some","children","alert","reset","prevState","uuidv4","prevValue","dataset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ac28209.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ContactForm.css';\r\n\r\nfunction ContactForm ({onChange}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    const handleFormReset = () => {\r\n        setName('');\r\n        setNumber('');\r\n  }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        if (name === 'name') {\r\n            setName(value)\r\n        }\r\n        if (name === 'number') {\r\n            setNumber(value)\r\n        }\r\n    }\r\n\r\n        return (\r\n            <form className=\"ContactForm\" onReset={handleFormReset} onSubmit={onChange}>\r\n                <label htmlFor=\"name\" className=\"ContactForm__name\">Name</label>\r\n                <input\r\n                    className=\"ContactForm__input\"\r\n                    value={name}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={handleChange}\r\n                />\r\n                <label htmlFor=\"number\" className=\"ContactForm__number\">\r\n                    Number\r\n                </label>\r\n                <input\r\n                    className=\"ContactForm__input\"\r\n                    value={number}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    id=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={handleChange}\r\n                />\r\n                <button type=\"submit\"  className=\"ContactForm__button\">Add contact</button>\r\n            </form>\r\n        )\r\n    \r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport './Filter.css';\r\n\r\nfunction Filter ({onChange}) {\r\n        return (\r\n            <div className=\"Filter\">\r\n                <h3 className=\"Filter__title\">Find contacts by name</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nfunction ContactListElement({props}) {\r\n    return (\r\n        <p className=\"ContactList__text\" >{props.name}: {props.number}</p>\r\n    )\r\n    \r\n}\r\n\r\nexport default ContactListElement;","import React from 'react';\r\nimport ContactListElement from \"./ContactListElement\";\r\nimport './ContactList.css';\r\n\r\nfunction ContactList({ contacts, filter, onDelete }) {\r\n    const list = contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n    return (\r\n        <ul className=\"ContactList\">\r\n            {list.map(item => (\r\n                <li className=\"ContactList__item\" key={item.id}>\r\n                    <ContactListElement props={item} />\r\n                    <button className=\"ContactList__button\" data-id={item.id} onClick={onDelete} type=\"button\">Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n    \r\n}\r\n\r\nexport default ContactList;","import React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport './App.css';\r\n\r\nfunction App () {\r\n  const [contacts, setContacts] = useState([\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ]);\r\n  const [filter, setFilter] = useState('')\r\n  \r\n  useEffect(() => {\r\n    setContacts(JSON.parse(localStorage.getItem('contacts')))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts))\r\n  }, [contacts])\r\n\r\n  const formChangeHandle = e => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    if (contacts.some(item => item.name === e.target.children.name.value)) {\r\n      alert(`${e.target.children.name.value} is already in contacts`);\r\n      return form.reset();\r\n    }\r\n    setContacts(prevState => [...prevState, { id: uuidv4(), name: e.target.children.name.value, number: e.target.children.number.value }])\r\n    form.reset();\r\n  }\r\n\r\n  const searchHandle = e => {\r\n    setFilter(e.currentTarget.value)\r\n  }\r\n\r\n  const onDelete = e => {\r\n    setContacts(prevValue => [...prevValue.filter(item => item.id !== e.target.dataset.id)])\r\n  }\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onChange={formChangeHandle}/>\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={searchHandle}/>\r\n        <ContactList contacts={contacts} filter={filter} onDelete={onDelete}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}